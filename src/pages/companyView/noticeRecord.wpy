<style lang="less">
@import '../../style/home.less';
@import '../../style/resume.less';
.record-view {
  background: #f8f8f8;
  .header-box {
    width: 60%;
    width: 320rpx;
    height: 68rpx;
    background: #fff;
    box-shadow: 0px 2rpx 8rpx 0px rgba(0, 0, 0, 0.1);
    border-radius: 34rpx;
    margin: 20rpx auto;
  }
  .date {
    color: #1890ff;
    font-size: 28rpx;
  }
  .page_record {
    .page_record-content {
      margin: 20rpx 40rpx;
      font-size: 26rpx;
      color: #333;
      line-height: 40rpx;
      .view-time {
        position: relative;
        &::before {
          content: '';
          width: 4rpx;
          height: 28rpx;
          background: #1890ff;
          position: absolute;
          top: 12%;
          left: -16rpx;
          border-radius: 2rpx;
        }
      }
    }
    .page_record_row {
      background: #fff;
      padding: 18rpx 20rpx;
      line-height: 40rpx;
      font-size: 32rpx;
      .my-text {
        font-size: 26rpx;
        color: #6a6a6a;
      }
    }
  }
}
</style>
<template>
  <view class="detail-view record-view">
    <view class="weui-flex between header-box">
      <view class="date">
        今日
      </view>
      <picker mode="date" value="{{dateValue}}" start="{{startValue}}" @change="bindDateChange" class="modal-col picker-col">
        <view class="picker weui-flex between">
          <view class="weui-flex between weui-flex__item">
            <view class="{{!params.date?'placeholder':''}}">{{dateValue}}</view>
            <image src="https://a.rsd123.com/image/images/orderTaking/date.png" class="dateIcon" />
          </view>
        </view>
      </picker>
    </view>
    <view class="view-detail">
      <scroll-view scroll-y="true" style="height:100%">
        <repeat wx:for="{{list1}}" wx:key="index">
          <view class="page_record">
            <view class="page_record-content">
              <view class="view-time">面试时间 : {{item.time}}</view>
              <view>面试内容 : {{item.content}}</view>
            </view>
            <repeat wx:for="{{item.children}}" wx:key="index" wx:for-item="newitem">
              <view class="page_record_row page_botttom" @tap="viewInfo({{newitem}})">
                <view>{{newitem.name}}</view>
                <view class="my-text">
                  女 25
                </view>
              </view>
            </repeat>
          </view>
        </repeat>
      </scroll-view>
    </view>
  </view>
  </view>
</template>
<script>
import wepy from 'wepy'
import { $http } from '@/http.js'
import noticeModal from '@/components/noticeModal'
import tabBar from '@/components/tabBar'
import search from '@/components/search'
import companyResumeList from '@/components/companyResumeList'
import viewNoticeModal from '@/components/viewNoticeModal'
import $moment from 'moment'
import { getList, wxNavigateTo, wxShowModal, wxToast, wxReLaunch } from '@/util'
export default class noticeRecord extends wepy.page {
  components = {
    tabBar: tabBar,
    noticeModal: noticeModal,
    search: search,
    companyResumeList: companyResumeList,
    viewNoticeModal: viewNoticeModal
  }
  data = {
    dateValue: '',
    startValue: '',
    tabBarList: [],
    list: [],
    params: {
      uid: '',
      time: '',
      jobId: ''
    },
    list1: [{
      content: 'sss',
      time: '2019-10',
      children: [{
        name: '杨萌萌'
      }, {
        name: '杨萌萌'
      }
      ]
    }, {
      content: 'sss',
      time: '2019-10',
      children: [{
        name: '杨萌萌'
      },
      ]
    }],
    count: 0,
    isBatch: false,
    isCheck: false,
    activeIndex: 0,
    isSeachWidth: false,
    isModal: true,
    modalHeight: 920,
    title: '',
    receiptType: 1,
    statusObj: {},
    job_id: '',
    timeInfo: {},
    id: '',
    check: false,
    viewType: 1,
    isNoticeModal: true,
    userSign: ''
  }
  computed = {
    newList () {
      return getList(this.list, 'addtime')
    }
  }
  onLoad (options) {
    this.params.jobId = options.jobId
    let dateValue = new Date().getTime() + ''
    dateValue = date.substr(0, 10)
    this.params.time = dateValue
    this.$apply()
    wx.setNavigationBarTitle({
      title: '通知记录'
    })
  }
  onShow () {
    this.params.uid = wx.getStorageSync('rendaUid') || this.$parent.globalData.uid
    this.getCheckList()
  }
  events = {
    searchValue: val => {
      this.params = Object.assign(this.params, { where: val })
      this.getCheckList()
    },
    inputFocus: () => {
      this.isSeachWidth = true
      this.$apply()
    },
    switchTab: index => {
      this.activeIndex = index
      if (this.activeIndex) {
        this.params.status = index - 1
      } else {
        this.params.status = ''
      }
      this.getCheckList()
      this.$apply()
    },
    handleResume: data => {
      this.auditResumeRecommend(data)
    },
    setAllTime: data => {
      console.log(data)
      let params = Object.assign(data, { uid: this.params.uid, job_id: this.job_id, resume_list: this.id })
      this.getUserSign(data.room_name)
      this.setVideoNotice(params)
    },
    selectResume: data => {
      console.log(data)
      if (data.length == this.newList.length) {
        this.isCheck = true
        this.$apply()
      }
      if (data.length) {
        this.id = data.join(',')
      }
    },
    viewDetail: data => {
      let query = `?resume_id=${data}`
      wx.navigateTo({
        url: '/pages/companyView/checkResumeDetail' + query
      })
    }
  }
  setVideoNotice (params) {
    $http('/company/setVideoInterviewTime', params).then(res => {
      if (res.data) {
        console.log(data)
        const url = `/pages/room/room?roomID=${params.room_num}` +
          `&userSig=${this.userSig}` +
          `&template=grid&debugMode=false&cloudenv=PRO` +
          `&localVideo=true` +
          `&localAudio=true` +
          `&enableEarMonitor=false` +
          `&enableAutoFocus=true` +
          `&localMirror=auto` +
          `&enableAgc=true` +
          `&enableAns=true` +
          `&encsmall=true` +
          `&frontCamera=front` +
          `&videoWidth=360` +
          `&videoHeight=640` +
          `&scene=rtc` +
          `&userID=${params.room_name}` +
          `&minBitrate=600&maxBitrate=900`
        wx.navigateTo({
          url: url,
        })
      } else {
        wxToast('设置失败')
      }
    })
  }
  auditResumeRecommend (params) {
    $http(this.checkUrlAPI, params).then(res => {
      if (res.data) {
        if (this.isCheck || this.check) {
          if (this.receiptType === 1) {
            this.statusObj.invoice_status = 4
            this.isNoticeModal = false
            if (this.viewType == 1) {
              this.modalHeight = 930
            } else {
              this.modalHeight = 750
            }
          }
          if (this.receiptType === 2) {
            this.statusObj.interview_status = 4
          }
          this.isBatch = false
          this.$apply()
        }
        this.getTotal(this.tabBarList)
        this.getCheckList()
      } else {
        wxToast('操作失败')
      }
    })
  }
  overInterview () {
    let params = {
      jobId: this.job_id,
      uid: this.params.uid
    }
    $http(this.overViewAndEntry, params).then(res => {
      if (res.data) {
        if (this.receiptType === 1) {
          this.statusObj.invoice_status = 2
        }
        if (this.receiptType === 2) {
          this.statusObj.interview_status = 2
        }
        this.$apply()
        wx.setStorageSync('receiptType', this.receiptType)
        wx.setStorageSync('statusObj', JSON.stringify(this.statusObj))
        wxReLaunch('/pages/companyView/resumeSiftings?query=' + this.receiptType)
      } else {
        wxToast('操作失败')
      }
    })
  }
  methods = {
    switchView (index) {
      this.viewType = index
      this.params.type = this.viewType
      this.getCheckList()
      this.$apply()
    },
    batchHandle () {
      this.isBatch = true
      this.list = this.checkAll(this.list, false)
      this.$apply()
    },
    viewNotice () {
      this.viewTimeInfo()
    },
    selectResumeAll (check) {
      this.isCheck = !check
      this.list = this.checkAll(this.list, this.isCheck)
      let arr = this.list.map(item => {
        if (item.disabled) {
          return item.id
        }
      })
      if (arr.length) {
        this.id = arr.join(',')
      }
      this.$apply()
    },
    overView () {
      let text = this.receiptType === 1 ? '面试' : '入职'
      wxShowModal('', `确定提前结束${text}`).then(res => {
        this.overInterview()
      }).catch(() => {
        console.log('取消')
      })
    },
    setResumeStatus (status) {
      if (!this.isCheck || !this.id) {
        return wxToast('请选择简历')
      }
      let parasm = {
        status,
        uid: wx.getStorageSync('rendaUid'),
        id: this.id,
        type: this.viewType
      }
      this.auditResumeRecommend(parasm)
    },
    viewEntry () {
      wx.setStorageSync('receiptType', 3)
      wxNavigateTo('/pages/companyView/resumeSiftings?query=3&jobId=' + this.job_id)
    }
  }
  checkAll (list, status) {
    return list.filter(item => {
      if (!item.status) {
        item.disabled = status
        return item
      }
    })
  }
  getTabBarList (val) {
    let arr = []
    let arr1 = [
      { name: '全部简历', num: 0 },
      { name: '待审核', num: 0 }]
    if (val === 1) {
      arr = [
        { name: '已同意', num: 0 },
        { name: '已拒绝', num: 0 }]
    } else if (val === 2) {
      arr = [
        { name: '已通过', num: 0 },
        { name: '未通过', num: 0 }]
    } else {
      arr = [
        { name: '已入职', num: 0 },
        { name: '未入职', num: 0 }]
    }
    let newArr = arr1.concat(arr)
    this.getTotal(newArr)
    return newArr
  }
  getTotal (arr) {
    let params = {
      uid: this.params.uid,
      job_id: this.job_id,
      type: this.receiptType
    }
    $http('/company/getAuditResumeNum', params).then(res => {
      if (res.data) {
        arr[0].num = res.data.allNum
        arr[1].num = res.data.auditedNum
        arr[2].num = res.data.adoptNum
        arr[3].num = res.data.referNum
        this.$apply()
      }
    })
  }
  // 查看面试和入职时间
  viewTimeInfo () {
    $http('/company/selectInterviewEntryInfo', { id: this.job_id }).then(res => {
      let query = {}
      if (this.receiptType === 1) {
        query = {
          time: res.data.view_time,
          content: res.data.content
        }
      } else {
        query = {
          time: res.data.entry_time,
          content: res.data.entry_comtent
        }
      }
      this.timeInfo = query
      this.isModal = !this.isModal
      this.$apply()
    })
  }
  getCheckList () {
    $http('/videointerview/videoInterviewNoticeRecord', this.params).then(res => {
      console.log(res)
      this.list = res.data.data || []
      if (this.receiptType) {
        this.check = this.checkStatus(this.list, this.receiptType)
      }
      this.tabBarList[this.activeIndex].num = this.list.length
      this.count = res.data.count
      this.$apply()
    })
  }
  checkStatus (list, type) {
    let status = ''
    if (type === 1) {
      status = 'status'
    } else if (type == 2) {
      status = 'interview_status'
    } else {
      status = 'entry_status'
    }
    return list.every(item => {
      return item[status]
    })
  }
  getTitle (val) {
    return val === 1 ? '简历列表' : val === 2 ? '面试审核' : '入职审核'
  }
}
</script>