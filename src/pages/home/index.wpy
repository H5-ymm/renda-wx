<style lang="less">
@import "../../style/home.less";
</style>
<template>
  <view class="home-view">
    <view class="home-view-header"></view>
    <view class="page page_margin">
      <scroll-view scroll-y="true" class="view-content" @scrolltolower="searchScrollLower">
        <view class="home-view-box">
          <resumeQuery @changeDate="changeDate"></resumeQuery>
          <resumeCard></resumeCard>
          <resumeList :list.sync="list"></resumeList>
        </view>
      </scroll-view>
    </view>
      <view class="home-add-resume" @tap="addResume">
        <image src="../../images/add.png" class="add-icon" />
        <view class="home-add-text">添加简历</view>
      </view>
      <homeModal :isScaleModal.sync="isModal" @handleOk="handleOk" :height.sync="modalHeight" :modalObj.sync="modalObj"></homeModal>
      <tabBarBottom :usertype.sync="usertype" :tabBarIndex.sync="tabBarIndex"></tabBarBottom>
  </view>
</template>
<script>
import wepy from 'wepy'
import { $http } from '@/http.js'
import resumeQuery from '@/components/resumeQuery'
import resumeCard from '@/components/resumeCard'
import resumeList from '@/components/resumeList'
import modal from '@/components/modal'
import tabBarBottom from '@/components/tabBarBottom'
// import { connect, getStore } from 'wepy-redux'
// const store = getStore()
//  @connect({
//     loginUser: (state) => state.user.loginUser
//  })
export default class home extends wepy.page {
  components = {
    resumeQuery: resumeQuery,
    resumeCard: resumeCard,
    resumeList: resumeList,
    homeModal: modal,
    tabBarBottom: tabBarBottom
  }
  data = {
    list: [],
    params: {
      uid: '',
      page: 1,
      limit: 10
    },
    count: 0,
    authorize: true,
    isModal: true,
    modalHeight: 560,
    modalObj: {
      title: '',
      subTitle: '',
      imgBg: '../../images/modalIcon.png',
      imgIcon: ''
    },
    usertype: '',
    tabBarData: {},
    tabBarIndex: 0
  }
  events = {
    changeDate: val => {
      this.params = Object.assign(this.params, val)
      this.getResumeList()
      this.$broadcast('changeDate', val)
    },
    handleOk: () => {
      this.isModal = true
      this.$apply()
      setTimeout(() => {
        wx.redirectTo({
          url: '/pages/login/login' // 页面 A
        })
      }, 300)
    }
  }

  methods = {
    addResume() {
      wx.navigateTo({
        url: '/pages/home/addInfo' // 页面 A
      })
    },
    searchScrollLower() {
      if (this.count > this.list.length && this.count > this.params.limit) {
        this.params.limit = this.params.limit + 10
        this.getResumeList()
      }
    }
  }
  getResumeList() {
    $http('/Wxresume/resumelist', this.params).then(res => {
      this.list = res.data.data || []
      this.count = res.data.count
      this.$apply()
    })
  }
  onLoad() {
    // let info = store.getState().user.loginUser
    this.usertype = wx.getStorageSync('rendaUserType')
    this.$apply()
    // 授权成功，缓存没有微信信息
    if (!wx.getStorageSync('wxInfo')) {
      wx.getUserInfo({
        success: res => {
          let params = {
            head_img: res.userInfo.avatarUrl,
            address: res.userInfo.province + res.userInfo.city,
            user_name: res.userInfo.nickName
          }
          this.$parent.globalData.wxInfo = params
          wx.setStorageSync('wxInfo', JSON.stringify(params))
        }
      })
    }
  }
  onShow() {
    this.params.uid = wx.getStorageSync('rendaUid') || this.$parent.globalData.uid
    this.getResumeList()
  }
}
</script>