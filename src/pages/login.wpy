<style lang="less">
@import '../style/base/variable/color.less';
.login_page {
  // height: 100%;
  .login-view {
    position: relative;
    height: 96%;
  }
  .login-title {
    padding: 170rpx 0 80rpx;
    font-size: 48rpx;
    width: 100%;
    color: @weuiTextColorTitle;
    .login-title-col {
      font-size: 36rpx;
      margin-top: 10rpx;
    }
  }
  .login-view-bg {
    position: absolute;
    top: -10px;
    left: 0;
    width: 100%;
    height: 100%;
  }
  .login-view-box {
    height: 85%;
    width: 80%;
    margin: 0 auto;
    .login-view-form {
      width: 100%;
    }
  }
  .weui-cell {
    margin-bottom: 20px;
    font-size: 28rpx;
    position: relative;
    .weui-cell_label {
      color: @weuiTextColorDesc;
      width: 130rpx;
    }
    .weui-input {
      padding: 20rpx 0 16rpx;
    }
    .weui-cell_line {
      margin-right: 30rpx;
    }
    .code-btn {
      position: absolute;
      top: 20rpx;
      right: 0;
      color: @weuiColorPrimary;
      font-size: 28rpx;
    }
  }
  .weui-cell_btn {
    padding: 40rpx 0;
  }
  .box {
    width: 100%;
    margin-top: 32rpx;
  }
  .msg-box {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin: 0 36rpx;
  }
  .logo {
    width: 45rpx;
    height: 55rpx;
  }
  .title {
    margin: 10rpx;
    color: @weuiTextColorDesc;
    font-weight: 500;
  }
  .msg {
    font-size: 28rpx;
    color: @weuiTextColorDesc;
    font-weight: bold;
    width: 100%;
  }
  .msg-title {
    text-align: left;
    width: 100%;
  }
  .user-box {
    display: flex;
    width: 90%;
    padding: 10rpx 0;
    margin: 10px auto;
    justify-content: flex-start;
    align-items: center;
    height: 120rpx;
    border-top: 2rpx solid #eee;
    border-bottom: 2rpx solid #eee;
  }
  .col-1 {
    width: 80rpx;
    height: 80rpx;
  }
  .col-2 {
    margin-left: 25rpx;
    width: 80%;
  }
  .userNickName {
    font-size: 24rpx;
    color: #ccc;
  }
  .btn {
    width: 70%;
    margin: 80rpx 15% 0;
  }
  .btn button {
    font-size: 30rpx;
    border-radius: 5rpx;
    width: 166rpx;
    height: 48rpx;
    line-height: 0;
  }
  .btn .btn-cancle {
    color: #1890ff;
    background: #f0f0f0;
    font-weight: bold;
  }
  .btn .btn-confirm {
    color: #fff;
    background: #1890ff;
  }
}
</style>

<template>
  <view class="login_page page_botttom">
    <view class="login-view">
      <image
        src="../images/loginBg.png"
        mode="scaleToFill"
        class="login-view-bg"
      />
      <view class="login-view-box">
        <view class="login-title">
          <view>您好，</view>
          <view class="login-title-col">欢迎使用人事达</view>
        </view>
        <view class="login-view-form">
          <view class="weui-cell weui-flex start weui-cell_input page_botttom">
            <view class="weui-cell_label weui-flex between">+86<label class="weui-cell_line">|</label></view>
            <input
              class="weui-input"
              auto-focus
              placeholder="输入您的手机号"
            />
          </view>
          <view class="weui-cell weui-flex start weui-cell_input page_botttom">
            <view class="weui-cell_label weui-flex between">验证码<label class="weui-cell_line">|</label></view>
            <input
              class="weui-input"
              auto-focus
              placeholder="输入验证码"
            />
            <text
              class="code-btn"
              @tap="getCode"
            >{{sendAuthCode ?'获取验证码':auth_time+'s'}}</text>
          </view>
          <view class="weui-cell_btn weui-flex center">
            <button
              class="weui-btn_cell weui-btn_cell-gradient"
              @tap="login"
            >登录</button>
          </view>
        </view>
      </view>
    </view>
    <actionSheet
      :isScaleModal="isScaleModal"
      :height="height"
    >
      <view class='box weui-flex start wrap'>
        <view class='msg-box'>
          <view class="msg-title weui-flex start">
            <image
              src='../images/my-active.png'
              class="logo"
            />
            <text class='title'>{{access.title}} </text>申请
          </view>
          <view class='msg'> {{access.msg}}</view>
        </view>
        <view class="user-box">
          <open-data
            type="userAvatarUrl"
            class="col-1"
          ></open-data>
          <view class="col-2">
            <view>微信个人信息</view>
            <open-data
              type="userNickName"
              class="userNickName"
            ></open-data>
          </view>
          <!-- <icon type="success_no_circle" size="22" color="green" /> -->
        </view>
        <view class='btn weui-flex center'>
          <button
            bindtap='cancle'
            class='weui-btn_cell btn-cancle'
          >{{access.cancle}}</button>
          <button
            type='primary'
            class='weui-btn_cell btn-confirm'
          >{{access.confirm}}</button>
        </view>
      </view>
    </actionSheet>
    <modal
      :isScaleModal="isModal"
      :height="modalHeight"
      :modalObj="modalObj"
    ></modal>
  </view>
</template>
<script>
import wepy from 'wepy';
import actionSheet from '../components/actionSheet'
import modal from '../components/modal'
// const imgBg = require('../images/modalBg.png')
//通过继承自wepy.page的类创建页面逻辑
export default class Login extends wepy.page {
  //可用于页面模板绑定的数据
  components = {
    actionSheet: actionSheet,
    modal
  }
  data = {
    motto: 'Hello World',
    userInfo: {},
    hasMask: false,
    hasUserInfo: false,
    canIUse: wx.canIUse('button.open-type.getUserInfo'),
    access: {
      title: '小程序名字',
      msg: '获得你昵称、头像、地区以及性别',
      cancle: '取消',
      confirm: '允许'
    },
    activeIndex: 0,
    height: 500,
    isScaleModal: true,
    isModal: true,
    modalHeight: 520,
    modalObj: {
      title: '您还没有注册哦',
      subTitle: '(请前往web端进行注册，谢谢配合 网址：)',
      imgBg: '../images/modalBg.png',
      imgIcon: '../images/modalIcon1.png'
    },
    auth_time: 60,//倒计时
    sendAuthCode: true,//控制
  };
  //事件处理函数(集中保存在methods对象中)
  methods = {
    getCode () {
      this.sendAuthCode = false
      let auth_timetimer = setInterval(() => {
        this.auth_time--;
        this.$apply()
        if (this.auth_time <= 0) {
          this.sendAuthCode = true;
          this.$apply()
          clearInterval(auth_timetimer);
        }
      }, 1000)
    },
    login () {
      // this.$broadcast('showActionSheet')
      this.$broadcast('showModal')
    },
    getUserInfo (e) {
      console.log(e)
      // app.globalData.userInfo = e.detail.userInfo
      this.userInfo = e.detail.userInfo
    }
  };

  //页面的生命周期函数
  onLoad () {
    if (wepy.$instance.globalData.userInfo) {
      this.userInfo = wepy.$instance.globalData.userInfo
      this.hasUserInfo = true
    } else if (this.canIUse) {
      // 由于 getUserInfo 是网络请求，可能会在 Page.onLoad 之后才返回
      // 所以此处加入 callback 以防止这种情况
      // app.userInfoReadyCallback = res => {
      //   this.userInfo = res.userInfo
      //   this.hasUserInfo = true
      // }
    } else {
      // 在没有 open-type=getUserInfo 版本的兼容处理
      wx.getUserInfo({
        success: res => {
          wepy.$instance.globalData.userInfo = res.userInfo
          this.userInfo = res.userInfo
          this.hasUserInfo = true
        }
      })
    }
  };
}
</script>