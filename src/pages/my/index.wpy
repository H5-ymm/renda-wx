<style lang="less">
@import '../../style/user.less';
</style>
<template>
  <view class="page_botttom page">
    <view class="my-view-header">
      <image src="../../images/bg.png" class="my-view-header-bg" mode="scaleToFill" alt="" />
      <view class="my-view-userInfo">
        <view class="my-avatar-box">
          <image src="{{head_img}}" wx:if="{{head_img}}" alt="" mode="aspectFill" class="my-avatar" />
          <image src="../../images/header.png" wx:else alt="" mode="aspectFit" class="my-avatar" />
        </view>
        <view class="my-user-name">{{userName}}</view>
        <view class="my-user-mobile">{{userInfo.mobile}}</view>
      </view>
    </view>
    <view class="page_margin my-view my-view-main">
      <view class="my-view-box">
        <view class="page_card">
          <repeat wx:for="{{menus}}" wx:key="index">
            <view class="page_card_row" @tap="viewInfo({{item}})">
              <view class="weui-flex between">
                <view class="weui-flex start">
                  <image src="{{item.icon}}" alt="" class="my-icon" />
                  <view class="my-text">{{item.title}}</view>
                </view>
                <view>
                  <image mode="scaleToFill" src="../../images/right.png" class="page_card_icon" />
                </view>
              </view>
            </view>
          </repeat>
        </view>
      </view>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy'
let $http = require('../../http.js')
//通过继承自wepy.page的类创建页面逻辑
export default class my extends wepy.page {
  //可用于页面模板绑定的数据
  data = {
    userInfo: {},
    head_img: '',
    menus: [
      {
        title: '账户信息',
        icon: '../../images/icon1.png',
        url: '/pages/my/userInfo'
      },
      {
        title: '团队信息',
        icon: '../../images/icon3.png',
        url: '/pages/my/teamInfo'
      },
      {
        title: '账户绑定',
        icon: '../../images/icon2.png',
        url: '/pages/my/userBind'
      }
    ]
  }

  config = {
    navigationBarTitleText: '我的'
  }
  //事件处理函数(集中保存在methods对象中)
  methods = {
    viewInfo (item) {
      wx.navigateTo({
        url: item.url
      })
    }
  }
  computed = {
    userName () {
      let name = wx.getStorageSync('wxInfo')
        ? JSON.parse(wx.getStorageSync('wxInfo')).user_name
        : ''
      return this.userInfo.user_name ? this.userInfo.user_name : name
    }
  }
  //页面的生命周期函数
  onLoad () {
    let uid = wx.getStorageSync('rendaUid') || this.$parent.globalData.uid
    $http.http('/Userinfo/getUserInfo', { uid }).then(res => {
      this.userInfo = res.data || {}
      if (res.data.head_img) {
        this.head_img = 'https://a.rsd123.com/' + res.data.head_img
      } else {
        this.head_img = wx.getStorageSync('wxInfo')
          ? JSON.parse(wx.getStorageSync('wxInfo')).head_img
          : ''
      }
      this.$apply()
      wx.setStorageSync('userInfo', JSON.stringify(this.userInfo))
    })
  }
}
</script>