<style lang="less">
@import '../../style/user.less';
</style>
<template>
  <view class="page_botttom page">
    <view class="my-view-header">
      <image src="../../images/bg.png" class="my-view-header-bg" mode="scaleToFill" alt="">
        <view class="my-view-userInfo">
          <view class="my-avatar-box">
            <image src="{{head_img}}" wx:if="{{head_img}}" alt="" mode="aspectFit" class="my-avatar">
              <image src="../../images/header.png" wx:else alt="" mode="aspectFit" class="my-avatar">
          </view>
          <view class="my-user-name">{{userInfo.user_name}}</view>
          <view class="my-user-mobile">{{userInfo.mobile}}</view>
        </view>
    </view>
    <view class="page_margin my-view my-view-main">
      <view class="my-view-box">
        <view class="page_card">
          <view class="page_card_row">
            <view class="weui-flex between" @tap="viewUserInfo">
              <view class="weui-flex start">
                <image src="../../images/icon1.png" alt="" class="my-icon">
                  <view class="my-text">账户信息</view>
              </view>
              <view>
                <image mode="scaleToFill" src="../../images/right.png" class="page_card_icon" />
              </view>
            </view>
          </view>
          <view class="page_card_row">
            <view class="weui-flex between" @tap="viewUserBind">
              <view class="weui-flex start">
                <image src="../../images/icon2.png" alt="" class="my-icon">
                  <view class="my-text">账户绑定</view>
              </view>
              <view>
                <image mode="scaleToFill" src="../../images/right.png" class="page_card_icon" />
              </view>
            </view>
          </view>
        </view>
      </view>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy'
let $http = require('../../http.js')
//通过继承自wepy.page的类创建页面逻辑
export default class my extends wepy.page {
  //可用于页面模板绑定的数据
  data = {
    userInfo: {},
    head_img: ''
  }

  config = {
    navigationBarTitleText: '我的'
  }
  //事件处理函数(集中保存在methods对象中)
  methods = {
    viewUserInfo() {
      wx.navigateTo({
        url: '/pages/my/userInfo' // 页面 A
      })
    },

    viewUserBind() {
      wx.navigateTo({
        url: '/pages/my/userBind' // 页面 A
      })
    }
  }

  //页面的生命周期函数
  onLoad() {
    let uid = wx.getStorageSync('rendaUid') || this.$parent.globalData.uid
    $http.http('/Userinfo/getUserInfo', { uid }).then(res => {
      this.userInfo = res.data || {}
      if (res.data.head_img) {
        this.head_img = 'http://tiantianxsg.com:39888/' + res.data.head_img
      } else {
        this.head_img = wx.getStorageSync('wxInfo')
          ? JSON.parse(wx.getStorageSync('wxInfo')).head_img
          : ''
      }
      console.log(this.head_img)
      this.$apply()
      wx.setStorageSync('userInfo', JSON.stringify(this.userInfo))
    })
  }
}
</script>