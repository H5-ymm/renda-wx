<style lang="less">
@import '../../../style/home.less';
</style>
<template>
	<view class="home-view">
		<view class="home-view-header"></view>
		<view class="page page_margin">
			<scroll-view scroll-y="true" style="height:100%" @scrolltolower="searchScrollLower">
				<view class="home-view-box">
					<search @searchValue="searchValue" class="weui-cell weui-flex start page_card"></search>
					<teamReceiptList :list.sync="newList" :receiptType.sync="receiptType" @setTime="setTime"></teamReceiptList>
				</view>
			</scroll-view>
		</view>
		<noticeModal :isScaleModal.sync="isModal" :height.sync="modalHeight" :title.sync="title"></noticeModal>
	</view>
</template>
<script>
import wepy from 'wepy'
import { $http } from '@/http.js'
import search from '@/components/search'
import teamReceiptList from '@/components/teamReceiptList'
import noticeModal from '@/components/noticeModal'
import { wxToast, getList } from '@/util.js'
export default class orderList extends wepy.page {
	components = {
		search: search,
		teamReceiptList: teamReceiptList,
		noticeModal: noticeModal
	}
	data = {
		list: [],
		params: {
			uid: '',
			page: 1,
			limit: 10
		},
		count: 0,
		receiptType: 0,
		isModal: true,
		modalHeight: 900,
		title: '',
		job_id: ''
	}
	getTitle (val) {
		let text = ''
		switch (val) {
			case 0:
				text = '申请接单'
				break;
			case 1:
				text = '接单分配'
				break;
			case 2:
				text = '简历初筛'
				break;
			case 3:
				text = '面试结果'
				break;
			case 4:
				text = '入职名单'
				break;
			default:
				text = ''
		}
		return text
	}
	getJobList () {
		this.list = []
		$http(this.urlApi, this.params).then(res => {
			this.list = res.data.data || []
			this.count = res.data.count
			this.$apply()
		})
	}
	// 设置面试和入职时间
	setDate (data) {
		let params = {
			uid: this.params.uid,
			job_id: this.job_id,
			time: data.time,
			content: data.content
		}
		$http(this.timeUrlApi, params).then(res => {
			if (res.data) {
				this.isModal = true
				this.$apply()
				this.getJobList()
			} else {
				wxToast('设置时间失败')
			}
		})
	}
	onLoad (options) {
		if (options.jobId) {
			this.params.jobId = options.jobId
		}
		this.params.uid = wx.getStorageSync('rendaUid') || this.$parent.globalData.uid
		this.receiptType = Number(options.query)
		if (this.receiptType > 1) {
			this.params.type = this.receiptType - 1
		}
		wx.setNavigationBarTitle({
			title: this.getTitle(this.receiptType)
		})
		this.$apply()
	}
	onShow () {
		this.getJobList()
	}
	computed = {
		newList () {
			return getList(this.list, 'addtime')
		},
		// 获取简历初筛，面试名单，入职名单列表url
		urlApi () {
			return this.receiptType === 0 ? '/apply/applyList' : this.receiptType === 1 ? '/apply/orderDistribution' : '/apply/resume_joblist'
		},
		timeUrlApi () {
			return this.receiptType === 1 ? '/company/editInterviewTime' : '/company/editEntryTime'
		}
	}
	events = {
		searchValue: val => {
			this.params = Object.assign(this.params, { job_name: val })
			this.getJobList()
		},
		setTime: data => {
			this.job_id = data
			this.isModal = !this.isModal
			this.title = this.receiptType === 1 ? '面试' : '入职'
			this.$apply()
		},
		handleClose: () => {
			this.isModal = true
			this.$apply()
		},
		setAllTime: data => {
			this.setDate(data)
		}
	}
	methods = {
		searchScrollLower () {
			if (this.count > this.list.length && this.count > this.params.limit) {
				this.params.limit = this.params.limit + 10
				this.getJobList()
			}
		}
	}
}
</script>