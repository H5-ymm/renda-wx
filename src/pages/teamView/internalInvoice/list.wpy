<style lang="less">
@import "../../../style/home.less";
</style>
<template>
	<view class="home-view">
		<view class="home-view-header"></view>
		<view class="page_margin page">
			<scroll-view scroll-y="true" style="height:100%">
				<view class="home-view-box">
					<search @searchValue="searchValue" class="weui-cell weui-flex start page_card"></search>
					<invoiceList :list.sync="newList" :recommendType.sync="recommendType" @handleResume="handleResume">
					</invoiceList>
				</view>
			</scroll-view>
		</view>
	</view>
	<viewNoticeModal :isScaleModal.sync="isModal" :height.sync="modalHeight" :timeInfo.sync="timeInfo" :title.sync="title"></viewNoticeModal>
	</view>
</template>
<script>
import wepy from 'wepy'
import { $http } from '@/http.js'
import search from '@/components/search'
import invoiceList from '@/components/invoiceList'
import viewNoticeModal from '@/components/viewNoticeModal'
import { getList, wxNavigateTo, wxShowModal, wxToast, wxReLaunch } from '@/util'
export default class checkResumeList extends wepy.page {
	components = {
		search: search,
		invoiceList: invoiceList,
		viewNoticeModal: viewNoticeModal
	}
	data = {
		list: [],
		params: {
			uid: '',
			page: 1,
			limit: 10
		},
		count: 0,
		isSeachWidth: false,
		isModal: true,
		modalHeight: 860,
		title: '查看面试时间',
		recommendType: 1,
		statusObj: {},
		job_id: '',
		timeInfo: {},
		id: '',
	}
	computed = {
		newList() {
			return getList(this.list, 'addtime')
		}
	}
	config = {
		navigationBarTitleText: '内部发单'
	}
	onLoad(options) {
		this.params.uid = wx.getStorageSync('rendaUid') || this.$parent.globalData.uid
		this.recommendType = options.query
		this.$apply()
		wx.setNavigationBarTitle({
			title: this.getTitle(this.recommendType)
		})
	}
	onShow() {
		this.statusObj = {}
		this.getList()
		this.$apply()
	}
	events = {
		searchValue: val => {
			this.params = Object.assign(this.params, { where: val })
			this.getList()
		},
		inputFocus: () => {
			this.isSeachWidth = true
			this.$apply()
		},
		handleResume: data => {
			this.auditResumeRecommend(data)
		}
	}
	auditResumeRecommend(params) {
		$http(this.checkUrlAPI, params).then(res => {
			if (res.data) {
				if (this.isCheck || this.check) {
					if (this.recommendType === 1) {
						this.statusObj.invoice_status = 4
					}
					if (this.recommendType === 2) {
						this.statusObj.interview_status = 4
					}
					this.isBatch = false
					this.$apply()
				}
				this.getTotal(this.tabBarList)
				this.getList()
			} else {
				wxToast('操作失败')
			}
		})
	}
	overInterview() {
		let params = {
			jobId: this.job_id,
			uid: this.params.uid
		}
		$http(this.overViewAndEntry, params).then(res => {
			if (res.data) {
				if (this.recommendType === 1) {
					this.statusObj.invoice_status = 2
				}
				if (this.recommendType === 2) {
					this.statusObj.interview_status = 2
				}
				this.$apply()
				wx.setStorageSync('recommendType', this.recommendType)
				wx.setStorageSync('statusObj', JSON.stringify(this.statusObj))
				// wxReLaunch('/pages/companyView/resumeSiftings?query=' + this.recommendType)
			} else {
				wxToast('操作失败')
			}
		})
	}
	methods = {
		viewNotice() {
			this.viewTimeInfo()
		},
		overView() {
			let text = this.recommendType === 1 ? '面试' : '入职'
			wxShowModal('', `确定提前结束${text}`).then(res => {
				this.overInterview()
			}).catch(() => {
				console.log('取消')
			})
		},
		viewEntry() {
			wx.setStorageSync('recommendType', 3)
			wxNavigateTo('/pages/companyView/resumeSiftings?query=3&jobId=' + this.job_id)
		}
	}
	getTotal(arr) {
		let params = {
			uid: this.params.uid,
			job_id: this.job_id,
			type: this.recommendType
		}
		$http('/company/getAuditResumeNum', params).then(res => {
			if (res.data) {
				arr[0].num = res.data.allNum
				arr[1].num = res.data.auditedNum
				arr[2].num = res.data.adoptNum
				arr[3].num = res.data.referNum
				this.$apply()
			}
		})
	}
	// 查看面试和入职时间
	viewTimeInfo() {
		$http('/company/selectInterviewEntryInfo', { id: this.job_id }).then(res => {
			let query = {}
			if (this.recommendType === 1) {
				query = {
					time: res.data.view_time,
					content: res.data.content
				}
			} else {
				query = {
					time: res.data.entry_time,
					content: res.data.entry_comtent
				}
			}
			this.timeInfo = query
			this.isModal = !this.isModal
			this.$apply()
		})
	}
	getGeportOrderList() {
		$http('/Wxresume/reportOrderList', this.params).then(res => {
			this.list = res.data.data || []
			this.count = res.data.count
			this.$apply()
		})
	}
	getInternalInvoiceList() {
		$http('/Wxresume/internalInvoiceList', this.params).then(res => {
			this.list = res.data.data || []
			this.count = res.data.count
			this.$apply()
		})
	}
	getList() {
		if (this.recommendType == 1) {
			this.getGeportOrderList()
		} else {
			this.getInternalInvoiceList()
		}
	}
	checkStatus(list, type) {
		let status = ''
		if (type === 1) {
			status = 'status'
		} else if (type == 2) {
			status = 'interview_status'
		} else {
			status = 'entry_status'
		}
		return list.every(item => {
			return item[status]
		})
	}
	getTitle(val) {
		return val == 1 ? '团队接单' : '内部发单'
	}
}
</script>