<style lang="less">
@import "./style/weui.less";
page {
  background-color: @weuiBgColorDefault;
  font-size: 16px;
  height: 100%;
  font-family: -apple-system-font, Helvetica Neue, Helvetica, sans-serif;
}
.placeholder {
  color: @weuiPlaceholderColor;
}
.view-content {
  height: calc(100% - 60px);
}
.page_margin {
  margin: 24rpx;
}
.login_page {
  background-color: @weuiBgColorWhite;
}
.page__hd {
  padding: 40px;
}
.page__bd {
  padding-bottom: 40px;
}
.page__bd_spacing {
  padding-left: 15px;
  padding-right: 15px;
}

.page__ft {
  padding-bottom: 10px;
  text-align: center;
}

.page__title {
  text-align: left;
  font-size: 20px;
  font-weight: 400;
}

.page__desc {
  margin-top: 5px;
  color: @weuiTextColorDesc;
  text-align: left;
  font-size: 14px;
}
.page_botttom {
  border-bottom: 1px solid @weuiLineColorLight;
}
.page_card {
  box-shadow: 0 2rpx 8rpx 0 rgba(0, 0, 0, 0.1);
  border-radius: 5px;
  padding: 0 24rpx;
  margin-bottom: 20rpx;
  background-color: @weuiBgColorWhite;
  font-size: 30rpx;
  &.modal-page_card {
    box-shadow: none;
    border-radius: 0;
    .modal-page_item {
      height: 44rpx;
    }
  }
  .page_card_row {
    padding: 24rpx 0;
    line-height: 52rpx;
    color: @weuiTextColorLight;
    .page_card_name {
      font-size: 36rpx;
      color: @weuiTextColorDesc;
      font-weight: bold;
    }
    .page_card_time {
      font-size: 26rpx;
    }
    .page_card_num {
      color: @weuiColorWarn;
    }
  }
  &.page_card_active {
    background: #f6f9fe;
    .page_card_row {
      .page_card_name {
        color: @weuiColorPrimary;
      }
    }
  }

  .page_card_icon {
    width: 36rpx;
    height: 36rpx;
  }
  .page_card_right-icon {
    width: 32rpx;
    height: 32rpx;
  }
  .page_card_status {
    border-radius: 22rpx;
    background: #deab3f;
    color: @weuiBgColorWhite;
    padding: 4rpx 22rpx;
    line-height: 32rpx;
    font-size: 24rpx;
    &.page_card_status1 {
      background: #6ab231;
    }
    &.page_card_status2 {
      background: @weuiColorWarn;
    }
  }
}
.home-view {
  .page_card {
    .page_card_row {
      padding: 26rpx 0;
      picker {
        height: 1.4rem;
        line-height: 1.4rem;
      }
    }
  }
}
.page_list {
  text-align: center;
  .page_noData {
    max-width: 440rpx;
    height: 245rpx;
    margin: 300rpx auto 40rpx;
  }
  .page_noData_text {
    font-size: 28rpx;
    color: @weuiTextColorTips;
    margin-left: 20rpx;
  }
}
.my-head {
  width: 88rpx;
  height: 88rpx;
  border-radius: 5rpx;
  margin-right: 10rpx;
}
</style>
<script>
import wepy from 'wepy';
import 'wepy-async-function';
import { setStore } from 'wepy-redux'
import configStore from './store'
import { $http } from '@/http.js'
const store = configStore()
wepy.store = store
setStore(store)
export default class extends wepy.app {
  config = {
    pages: [
      'pages/login/welcome',
      'pages/register/selectUser',
      'pages/register/companyTeam',
      'pages/register/companyForm',
      'pages/register/team',
      'pages/home/index',
      'pages/home/resumeDetail',
      'pages/home/addInfo',
      'pages/home/list',
      'pages/my/index',
      'pages/my/userInfo',
      'pages/my/userBind',
      'pages/my/teamInfo',
      'pages/login/login',
      'pages/login/rule'
    ],
    window: {
      navigationBarTextStyle: 'white',
      navigationBarTitleText: '人事达',
      navigationBarBackgroundColor: '#1890FF',
      backgroundColor: '#1890FF'
    },
    // tabBar: {
    //   color: '#999999',
    //   selectedColor: '#1890FF',
    //   borderStyle: 'white',
    //   list: [
    //     {
    //       pagePath: 'pages/home/index',
    //       text: '简历列表',
    //       iconPath: './images/list.png',
    //       selectedIconPath: './images/list-active.png'
    //     },
    //     {
    //       pagePath: 'pages/my/index',
    //       text: '我的',
    //       iconPath: './images/my.png',
    //       selectedIconPath: './images/my-active.png'
    //     }
    //   ]
    // },
    networkTimeout: {
      request: 10000,
      connectSocket: 10000,
      uploadFile: 10000,
      downloadFile: 10000
    }
  };
  onLaunch(options) {
    this.autoUpdate()
    this.isCheckSession()
  }
  autoUpdate() {
    var self = this
    // 获取小程序更新机制兼容
    if (wx.canIUse('getUpdateManager')) {
      const updateManager = wx.getUpdateManager()
      // 1. 检查小程序是否有新版本发布
      updateManager.onCheckForUpdate(function (res) {
        // 请求完新版本信息的回调
        if (res.hasUpdate) {
          // 检测到新版本，需要更新，给出提示
          wx.showModal({
            title: '更新提示',
            content: '检测到新版本，是否下载新版本并重启小程序？',
            success: function (res) {
              if (res.confirm) {
                // 2. 用户确定下载更新小程序，小程序下载及更新静默进行
                self.downLoadAndUpdate(updateManager)
              } else if (res.cancel) {
                // 用户点击取消按钮的处理，如果需要强制更新，则给出二次弹窗，如果不需要，则这里的代码都可以删掉了
                wx.showModal({
                  title: '温馨提示~',
                  content: '本次版本更新涉及到新的功能添加，旧版本无法正常访问的哦~',
                  showCancel: false, // 隐藏取消按钮
                  confirmText: '确定更新', // 只保留确定更新按钮
                  success: function (res) {
                    if (res.confirm) {
                      // 下载新版本，并重新应用
                      self.downLoadAndUpdate(updateManager)
                    }
                  }
                })
              }
            }
          })
        }
      })
    } else {
      // 如果希望用户在最新版本的客户端上体验您的小程序，可以这样子提示
      wx.showModal({
        title: '提示',
        content: '当前微信版本过低，无法使用该功能，请升级到最新微信版本后重试。'
      })
    }
  }
  downLoadAndUpdate(updateManager) {
    wx.showLoading();
    // 静默下载更新小程序新版本
    updateManager.onUpdateReady(function () {
      wx.hideLoading()
      // 新的版本已经下载好，调用 applyUpdate 应用新版本并重启
      updateManager.applyUpdate()
    })
    updateManager.onUpdateFailed(function () {
      // 新的版本下载失败
      wx.showModal({
        title: '已经有新版本了哟~',
        content: '新版本已经上线啦~，请您删除当前小程序，重新搜索打开哟~'
      })
    })
  }
  constructor() {
    super();
    this.use('promisify');
    this.use('requestfix');
    wx.removeStorageSync('resumeType');
    wx.removeStorageSync('sendAuthCode');
  }
  globalData = {
    userInfo: null,
    uid: '',
    openId: '',
    wxInfo: null,
    sessionKey: '',
    list: [
      {
        pagePath: '/pages/home/index',
        text: '简历列表',
        selected: true,
        iconPath: '../images/list.png',
        selectedIconPath: '../images/list-active.png'
      },
      {
        pagePath: '/pages/my/index',
        text: '我的',
        selected: false,
        iconPath: '../images/my.png',
        selectedIconPath: '../images/my-active.png'
      }
    ],
    tabBar: {
      color: '#999999',
      selectedColor: '#1890FF',
      borderStyle: 'white',
      list: []
    }
    // 处理tabBar中点击, 被点击,将当前的数据对象中 selected 改成true, 其余的就得改成 false;  这里的id是标识, 在
  };
  tabBarClickHandle(id, that) {
    let tbList = this.globalData.tabBar.list;
    tbList.forEach((item, index) => {
      if (id === index) {
        tbList[id].selected = true;
      } else {
        tbList[index].selected = false;
      }
    });
    that.$apply();
    return this.globalData.tabBar;
  }
  isCheckSession() {
    wx.checkSession({
      success: () => {
        console.log('没有过期')
      },
      fail: () => {
        this.getOpenId()
      }
    })
  }
  getOpenId() {
    let that = this
    wx.login({
      success(res) {
        if (res.code) {
          console.log(res.code)
          $http('/Login/getopenid', { code: res.code }).then(res => {
            let data = JSON.parse(res.data)
            that.globalData.openid = data.openid
            that.globalData.sessionKey = data.session_key
            wx.setStorageSync('session_key', data.session_key)
            wx.setStorageSync('rendaOpenId', data.openid)
          }).catch(error => {
            console.log(error)
          })
        } else {
          console.log(1)
          console.log('获取失败！' + res.errMsg)
        }
      }
    })
    return that.globalData.openid
  }
}
</script>